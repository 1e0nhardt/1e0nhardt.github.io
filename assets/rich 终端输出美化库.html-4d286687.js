const s=JSON.parse(`{"key":"v-ddab9c9e","path":"/programming/rich%20%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E7%BE%8E%E5%8C%96%E5%BA%93.html","title":"rich 终端输出美化库","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","isOriginal":true,"date":"2023-06-11T00:00:00.000Z","sticky":false,"star":false,"comment":true,"category":["programming"],"tag":["python"],"description":"rich 终端输出美化库 进度条 自定义进度条 import time from rich.progress import Progress # 1.创建管理进度条的对象 progress = Progress() progress.start() # 2.添加一个task到progress对象 # 累积的advance除以total为当前进度条百分比。 # 一个task对应在终端中显示的一个进度条 task = progress.add_task('[blue]Training', total=1000) for i in range(1000): \\t... \\tloss = 1 - i / 1000 \\tif i % 50 == 0: \\t\\tadvance = 50 if i != 0 else 0 \\t\\t# 3.手动更新进度条 \\t\\tprogress.update(task, advance=advance, description=f\\"[blue]loss={loss:.4f}\\") progress.update(task, advance=advance, description=f\\"[green]Complete! loss={loss:.4f}\\") # 4.终止进度条 progress.stop()","head":[["meta",{"property":"og:url","content":"https://1e0nhardt.github.io/programming/rich%20%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E7%BE%8E%E5%8C%96%E5%BA%93.html"}],["meta",{"property":"og:site_name","content":"实事求是"}],["meta",{"property":"og:title","content":"rich 终端输出美化库"}],["meta",{"property":"og:description","content":"rich 终端输出美化库 进度条 自定义进度条 import time from rich.progress import Progress # 1.创建管理进度条的对象 progress = Progress() progress.start() # 2.添加一个task到progress对象 # 累积的advance除以total为当前进度条百分比。 # 一个task对应在终端中显示的一个进度条 task = progress.add_task('[blue]Training', total=1000) for i in range(1000): \\t... \\tloss = 1 - i / 1000 \\tif i % 50 == 0: \\t\\tadvance = 50 if i != 0 else 0 \\t\\t# 3.手动更新进度条 \\t\\tprogress.update(task, advance=advance, description=f\\"[blue]loss={loss:.4f}\\") progress.update(task, advance=advance, description=f\\"[green]Complete! loss={loss:.4f}\\") # 4.终止进度条 progress.stop()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-11T08:29:04.000Z"}],["meta",{"property":"article:author","content":"leonhardt"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:published_time","content":"2023-06-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-11T08:29:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rich 终端输出美化库\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-11T08:29:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"leonhardt\\",\\"url\\":\\"/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"进度条","slug":"进度条","link":"#进度条","children":[{"level":3,"title":"自定义进度条","slug":"自定义进度条","link":"#自定义进度条","children":[]}]},{"level":2,"title":"状态动画","slug":"状态动画","link":"#状态动画","children":[]}],"git":{"createdTime":1686470142000,"updatedTime":1686472144000,"contributors":[{"name":"1e0nhardt","email":"huwkigane@gmail.com","commits":2}]},"readingTime":{"minutes":0.67,"words":200},"filePathRelative":"programming/rich 终端输出美化库.md","localizedDate":"2023年6月11日","excerpt":"<h1> rich 终端输出美化库</h1>\\n<h2> 进度条</h2>\\n<h3> 自定义进度条</h3>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> time\\n<span class=\\"token keyword\\">from</span> rich<span class=\\"token punctuation\\">.</span>progress <span class=\\"token keyword\\">import</span> Progress\\n\\n<span class=\\"token comment\\"># 1.创建管理进度条的对象</span>\\nprogress <span class=\\"token operator\\">=</span> Progress<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nprogress<span class=\\"token punctuation\\">.</span>start<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 2.添加一个task到progress对象</span>\\n<span class=\\"token comment\\"># 累积的advance除以total为当前进度条百分比。</span>\\n<span class=\\"token comment\\"># 一个task对应在终端中显示的一个进度条</span>\\ntask <span class=\\"token operator\\">=</span> progress<span class=\\"token punctuation\\">.</span>add_task<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'[blue]Training'</span><span class=\\"token punctuation\\">,</span> total<span class=\\"token operator\\">=</span><span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n\\t<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n\\tloss <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> i <span class=\\"token operator\\">/</span> <span class=\\"token number\\">1000</span>\\n\\t<span class=\\"token keyword\\">if</span> i <span class=\\"token operator\\">%</span> <span class=\\"token number\\">50</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span>\\n\\t\\tadvance <span class=\\"token operator\\">=</span> <span class=\\"token number\\">50</span> <span class=\\"token keyword\\">if</span> i <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">0</span> <span class=\\"token keyword\\">else</span> <span class=\\"token number\\">0</span>\\n\\t\\t<span class=\\"token comment\\"># 3.手动更新进度条</span>\\n\\t\\tprogress<span class=\\"token punctuation\\">.</span>update<span class=\\"token punctuation\\">(</span>task<span class=\\"token punctuation\\">,</span> advance<span class=\\"token operator\\">=</span>advance<span class=\\"token punctuation\\">,</span> description<span class=\\"token operator\\">=</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"[blue]loss=</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>loss<span class=\\"token punctuation\\">:</span><span class=\\"token format-spec\\">.4f</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\nprogress<span class=\\"token punctuation\\">.</span>update<span class=\\"token punctuation\\">(</span>task<span class=\\"token punctuation\\">,</span> advance<span class=\\"token operator\\">=</span>advance<span class=\\"token punctuation\\">,</span> description<span class=\\"token operator\\">=</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"[green]Complete! loss=</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>loss<span class=\\"token punctuation\\">:</span><span class=\\"token format-spec\\">.4f</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 4.终止进度条</span>\\nprogress<span class=\\"token punctuation\\">.</span>stop<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{s as data};
