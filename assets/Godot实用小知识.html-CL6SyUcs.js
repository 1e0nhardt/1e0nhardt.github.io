import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as l,c as r,a as s,b as a,d as o,e as t}from"./app-jYPNnZCE.js";const p={},d=s("h1",{id:"godot实用小知识",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#godot实用小知识"},[s("span",null,"Godot实用小知识")])],-1),c=s("h2",{id:"文档注释",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#文档注释"},[s("span",null,"文档注释")])],-1),k={href:"https://docs.godotengine.org/zh-cn/4.x/tutorials/scripting/gdscript/gdscript_documentation_comments.html",target:"_blank",rel:"noopener noreferrer"},h=s("br",null,null,-1),B=s("code",null,"#",-1),u=s("code",null,"##",-1),y=t(`<h2 id="忽略警告" tabindex="-1"><a class="header-anchor" href="#忽略警告"><span>忽略警告</span></a></h2><ul><li>修改项目配置，影响所有文件。 <ul><li>例如：忽略未使用的参数警告。 project-&gt;settings-&gt;debug/gdscript/warnings/unused_parameter</li></ul></li><li>装饰器，在某个函数中忽略特定警告 <ul><li>例如：忽略整数除法警告。@warning_ignore(&quot;integer_division&quot;)</li></ul></li></ul><h2 id="仅在编辑器中运行" tabindex="-1"><a class="header-anchor" href="#仅在编辑器中运行"><span>仅在编辑器中运行</span></a></h2><p>@tool当在脚本的顶部添加时，脚本会在编辑器中执行。</p><p>可以使用Engine.is_editor_hint()确定脚本的哪些部分在编辑器中执行，在游戏中以及两者兼而有之。</p><ul><li>对于不在编辑器中执行的Node，只能访问其默认属性，不能访问用户定义的属性。</li><li>Autoload节点始终不能访问。</li><li>新增加的@tool脚本需要重启才能在编辑器中生效</li></ul><h2 id="godot节点生命周期" tabindex="-1"><a class="header-anchor" href="#godot节点生命周期"><span>Godot节点生命周期</span></a></h2><ul><li><code>_init()</code>: 构造器。Class.new()</li><li><code>_ready()</code>: 所有子节点都准备好了后，被通知ready后调用。</li><li><code>_enter_tree()</code> : DFS遍历到时调用。</li><li><code>_exit_tree()</code>: DFS返回时调用。</li><li><code>_process(delta)</code>: 每帧调用。tick()</li><li><code>_physics_process(delta)</code></li><li><code>_input(event)</code>: 接受游戏中所有事件</li><li><code>_unhandled_input(event)</code></li><li><code>_notification(what)</code>: 节点中发生的所有事件的通知</li></ul><p>典型用例：当玩家在游戏窗口外点击时，暂停游戏。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> _notification</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">what</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">	if</span><span style="color:#24292E;--shiki-dark:#E06C75;"> what</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> ==</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Mainloop</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#E06C75;">NOTIFICATION_APPLICATION_FOCUS_OUT</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">		pause_game</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="owner-vs-get-parent" tabindex="-1"><a class="header-anchor" href="#owner-vs-get-parent"><span>owner vs get_parent()</span></a></h2><ul><li>owner <ul><li>在当前场景中: <ul><li>非根节点的owner就是根节点</li><li>根节点的owner为null</li></ul></li><li>添加到其他场景中： <ul><li>非根节点的owner就是原场景根节点</li><li>根节点的owner为新场景的根节点</li></ul></li><li>由脚本动态生成的节点的默认<code>Owner</code>是<code>null</code></li></ul></li><li>get_parent(): <ul><li>在当前场景中: <ul><li>非根节点：当前节点的父节点</li><li>根节点：root</li></ul></li><li>添加到其他场景中：当前节点的父节点</li></ul></li></ul><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span>:=</span></a></h2><p><code>var life_points := 4</code><br> 写冒号但省略写类型时,Godot将尝试推测类型</p><h2 id="如何获取当前代码所在文件-行数-函数" tabindex="-1"><a class="header-anchor" href="#如何获取当前代码所在文件-行数-函数"><span>如何获取当前代码所在文件，行数，函数</span></a></h2><p>get_stack(): 返回一个字典的数组，存储了当前调用栈的信息。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Returns an array of dictionaries representing the current call stack. See also print_stack().</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">func </span><span style="color:#24292E;--shiki-dark:#61AFEF;">_ready</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#61AFEF;">    foo</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">func </span><span style="color:#24292E;--shiki-dark:#61AFEF;">foo</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#61AFEF;">    bar</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">func </span><span style="color:#24292E;--shiki-dark:#61AFEF;">bar</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#56B6C2;">    print</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#61AFEF;">get_stack</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">[{function:bar, line:</span><span style="color:#005CC5;--shiki-dark:#D19A66;">12</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, source:res:</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">script.gd}, {function:foo, line:</span><span style="color:#005CC5;--shiki-dark:#D19A66;">9</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, source:res:</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">script.gd}, {function:_ready, line:</span><span style="color:#005CC5;--shiki-dark:#D19A66;">6</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, source:res:</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">script.gd}]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在gdscript中创建资源并保存" tabindex="-1"><a class="header-anchor" href="#在gdscript中创建资源并保存"><span>在GDScript中创建资源并保存</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">var atlas_res </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> AtlasTexture.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">new</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">atlas_res.region </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> Rect2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">441</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">556</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">35</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">35</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">atlas_res.margin </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> Rect2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3.5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">3.5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">7</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">7</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">ResourceSaver.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">save</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(atlas_res, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;res://resources/test.tres&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resource类与实例" tabindex="-1"><a class="header-anchor" href="#resource类与实例"><span>Resource类与实例</span></a></h2><ul><li>通过load或preload加载相同的Resources，返回的是相同的实例</li><li>定义属性时，最好指定类型</li><li>只有export的属性会被序列化</li></ul><h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举"><span>枚举</span></a></h2><p>gdscript的枚举实际相当于</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">const enum_name </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#D19A66;">	ENUM_TYPE1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> = </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#D19A66;">	ENUM_TYPE2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> = </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#D19A66;">	ENUM_TYPE3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> = </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function g(m,E){const e=i("ExternalLinkIcon");return l(),r("div",null,[d,c,s("p",null,[s("a",k,[a("https://docs.godotengine.org/zh-cn/4.x/tutorials/scripting/gdscript/gdscript_documentation_comments.html"),o(e)]),h,B,a("为普通注释，"),u,a("为文档注释。文档注释必须写在成员声明之前，或写于脚本顶部来为脚本提供基本说明。若使用文档注释注释了导出变量，则可在编辑器中通过悬停窗来查看该导出变量的文档注释。")]),y])}const F=n(p,[["render",g],["__file","Godot实用小知识.html.vue"]]),b=JSON.parse('{"path":"/gamedev/Godot%E5%AE%9E%E7%94%A8%E5%B0%8F%E7%9F%A5%E8%AF%86.html","title":"Godot实用小知识","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-05-12T00:00:00.000Z","sticky":false,"star":false,"comment":true,"category":["Game"],"tags":["hazel"],"description":"Godot实用小知识","head":[["meta",{"property":"og:url","content":"https://1e0nhardt.github.io/gamedev/Godot%E5%AE%9E%E7%94%A8%E5%B0%8F%E7%9F%A5%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"宁静致远"}],["meta",{"property":"og:title","content":"Godot实用小知识"}],["meta",{"property":"og:description","content":"Godot实用小知识"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-25T16:58:41.000Z"}],["meta",{"property":"article:author","content":"leonhardt"}],["meta",{"property":"article:tag","content":"hazel"}],["meta",{"property":"article:published_time","content":"2024-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-25T16:58:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Godot实用小知识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-25T16:58:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"leonhardt\\",\\"url\\":\\"/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"文档注释","slug":"文档注释","link":"#文档注释","children":[]},{"level":2,"title":"忽略警告","slug":"忽略警告","link":"#忽略警告","children":[]},{"level":2,"title":"仅在编辑器中运行","slug":"仅在编辑器中运行","link":"#仅在编辑器中运行","children":[]},{"level":2,"title":"Godot节点生命周期","slug":"godot节点生命周期","link":"#godot节点生命周期","children":[]},{"level":2,"title":"owner vs get_parent()","slug":"owner-vs-get-parent","link":"#owner-vs-get-parent","children":[]},{"level":2,"title":":=","slug":"","link":"#","children":[]},{"level":2,"title":"如何获取当前代码所在文件，行数，函数","slug":"如何获取当前代码所在文件-行数-函数","link":"#如何获取当前代码所在文件-行数-函数","children":[]},{"level":2,"title":"在GDScript中创建资源并保存","slug":"在gdscript中创建资源并保存","link":"#在gdscript中创建资源并保存","children":[]},{"level":2,"title":"Resource类与实例","slug":"resource类与实例","link":"#resource类与实例","children":[]},{"level":2,"title":"枚举","slug":"枚举","link":"#枚举","children":[]}],"git":{"createdTime":1716656321000,"updatedTime":1716656321000,"contributors":[{"name":"1e0nhardt","email":"huwkigane@gmail.com","commits":1}]},"readingTime":{"minutes":2.43,"words":730},"filePathRelative":"gamedev/Godot实用小知识.md","localizedDate":"2024年5月12日","excerpt":""}');export{F as comp,b as data};
