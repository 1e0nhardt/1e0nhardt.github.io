import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as r,c as o,b as s,d as a,e as p,a as n}from"./app-BsuYk19D.js";const t={},d=n(`<h1 id="godot组件与基本使用方法" tabindex="-1"><a class="header-anchor" href="#godot组件与基本使用方法"><span>Godot组件与基本使用方法</span></a></h1><h2 id="menubutton" tabindex="-1"><a class="header-anchor" href="#menubutton"><span>MenuButton</span></a></h2><p>Items设置选项。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> _ready</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">	$MenuButton</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">get_popup</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;id_pressed&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">on_menu_item_pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> input_event_key</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> InputEventKey</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">new</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    input_event_key</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E06C75;">keycode</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> KEY_Q</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    input_event_key</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E06C75;">ctrl_pressed</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> shortcut</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Shortcut</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">new</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    shortcut</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">events</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">input_event_key</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    $MenuButton</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">get_popup</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add_shortcut</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">shortcut</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">true</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> on_menu_item_pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#24292E;--shiki-dark:#E06C75;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> n</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> $MenuButton</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">get_popup</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">get_item_text</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">    print</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">n</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="color:#24292E;--shiki-dark:#E06C75;"> n</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> ==</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;Save&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:        </span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        get_tree</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">quit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>FileDialog: 脚本中用$FileDialog.popup()打开窗口。玩家操作完成后获得一个路径。触发file_selected信号。</p><h2 id="graphedit" tabindex="-1"><a class="header-anchor" href="#graphedit"><span>GraphEdit</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>接口在4.x版本会大改</p></div><p>GraphNode的缩放和关闭</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">extends</span><span style="color:#24292E;--shiki-dark:#E06C75;"> GraphNode</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> _ready</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    close_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">on_close_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    resize_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">on_resize_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> on_close_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">    queue_free</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> on_resize_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">new_size</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">    size</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E06C75;"> new_size</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连线和断连</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">extends</span><span style="color:#24292E;--shiki-dark:#E06C75;"> Control</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="color:#24292E;--shiki-dark:#E06C75;">onready</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> graph_edit</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E06C75;"> $GraphEdit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> graph_node</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> preload</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;res://graph_node.tscn&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> _ready</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    $AddNodeButton</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">on_add_node_pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    $RunButton</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">on_run_pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    graph_edit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">connection_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">on_connection_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    graph_edit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">disconnection_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">on_disconnection_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> on_add_node_pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> node_instance</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> graph_node</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">instantiate</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    graph_edit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add_child</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">node_instance</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> on_run_pressed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">    print</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">graph_edit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">get_connection_list</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> on_connection_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">from_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    graph_edit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">connect_node</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">from_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> on_disconnection_request</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">from_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    graph_edit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">disconnect_node</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">from_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">to_port</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在2d中自定义-draw" tabindex="-1"><a class="header-anchor" href="#在2d中自定义-draw"><span>在2D中自定义_draw()</span></a></h2><p>节点需要继承自CanvasItem。</p><h3 id="绘制" tabindex="-1"><a class="header-anchor" href="#绘制"><span>绘制</span></a></h3><ul><li>覆盖<code>_draw()</code>函数。</li><li>绘制函数: <ul><li>draw_line()</li><li>draw_rect()</li><li>...</li></ul></li></ul><h3 id="更新" tabindex="-1"><a class="header-anchor" href="#更新"><span>更新</span></a></h3><ul><li><code>_draw()</code>函数只调用一次，之后其定义的绘制指令会被缓存并记住。</li><li>如果确实需要重绘，调用<code>CanvasItem.queue_redraw()</code></li></ul><h3 id="坐标空间" tabindex="-1"><a class="header-anchor" href="#坐标空间"><span>坐标空间</span></a></h3><p>drawing API使用CanvasItem的坐标系。这意味着它使用应用CanvasItem转换后的坐标空间。此外，可以使用draw_set_transform或draw_set_transform_matrix应用自定义转换。</p><p>注意：在使用draw_line()和fdraw_rect()时，如果线宽为奇数，则需要将位置偏移0.5以保证线位置确实在中心。</p><h2 id="无边框-窗口透明-点击穿透" tabindex="-1"><a class="header-anchor" href="#无边框-窗口透明-点击穿透"><span>无边框，窗口透明，点击穿透</span></a></h2><h3 id="无边框" tabindex="-1"><a class="header-anchor" href="#无边框"><span>无边框</span></a></h3><ul><li>ProjectSettings-&gt;Display-&gt;Window-&gt;Size-&gt;Borderless</li></ul><h3 id="窗口透明" tabindex="-1"><a class="header-anchor" href="#窗口透明"><span>窗口透明</span></a></h3><p>勾选</p><ol><li>ProjectSettings-&gt;Display-&gt;Window-&gt;Size-&gt;Transparent</li><li>ProjectSettings-&gt;Rendering-&gt;Viewport-&gt;Transparent Background</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 后来设置不行</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">ProjectSettings.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">set_setting</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;display/window/size/transparent&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, true)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">ProjectSettings.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">set_setting</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;rendering/viewport/transparent_background&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, true)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="点击穿透" tabindex="-1"><a class="header-anchor" href="#点击穿透"><span>点击穿透</span></a></h3><ul><li><code>DisplayServer.window_set_mouse_passthrough($Path2D.curve.get_baked_points())</code></li><li><code>DisplayServer.window_set_mouse_passthrough($Polygon2D.polygon)</code><br> 用Path2D或Polygon2D确定可点击的区域，区域外的部分将被设置为点击穿透。(Window上，区域外的部分不会被渲染)</li></ul><p>实际只需要传入一个PackedVector2Array即可，需要按polygon的顺序来。</p><h3 id="子窗口的无边框和透明" tabindex="-1"><a class="header-anchor" href="#子窗口的无边框和透明"><span>子窗口的无边框和透明</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">extend</span><span style="color:#24292E;--shiki-dark:#E06C75;"> Window</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> _ready</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">	get_viewport</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#E06C75;">borderless</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">	get_viewport</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#E06C75;">transparent</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">	get_viewport</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#E06C75;">transparent_bg</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">	get_viewport</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#E06C75;">always_on_top</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多窗口" tabindex="-1"><a class="header-anchor" href="#多窗口"><span>多窗口</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Window默认是嵌入式的，设置该属性为false后创建的窗口是独立的。</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#61AFEF;">get_viewport</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().gui_embed_subwindows </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> false</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">var new_window: Window </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> todo_window.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">instantiate</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#61AFEF;">add_child</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(new_window)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">new_window.position </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> Vector2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">300</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">500</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">new_window.visible </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">new_window.title </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;X-Ray Glass&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">new_window.size </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> Vector2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">400</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">400</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 创建后可以改回来</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#61AFEF;">get_viewport</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().gui_embed_subwindows </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tween" tabindex="-1"><a class="header-anchor" href="#tween"><span>Tween</span></a></h2><p>tween必须用create_tween方法创建。</p><p>tweener默认是按顺序执行(chain)。可以使用set_parallel让之后的tweener并行执行。</p><ul><li>tween.set_parallel() # 设置多个tween并行执行</li><li>tween.chain() # 等待所有tween执行完成</li></ul><p>可以通过<code>Tween set_pause_mode ( TweenPauseMode mode )</code>调整场暂停时，动画的行为。</p><p>可以调整所有tweener的动画速度<code>Tween set_speed_scale ( float speed )</code></p>`,40),k={href:"https://easings.net/en",target:"_blank",rel:"noopener noreferrer"},c=n(`<p>可以为tween创建的tweener设置默认的插值方法。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">var tween </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> get_tree</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#61AFEF;">create_tween</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#61AFEF;">bind_node</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#24292E;--shiki-dark:#61AFEF;">set_trans</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(Tween.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">TRANS_ELASTIC</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">tween.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">tween_property</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#B31D28;--shiki-dark:#FFFFFF;font-style:italic;--shiki-dark-font-style:inherit;">$</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">Sprite, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;modulate&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, Color.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">RED</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">tween.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">tween_property</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#B31D28;--shiki-dark:#FFFFFF;font-style:italic;--shiki-dark-font-style:inherit;">$</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">Sprite, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;scale&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#61AFEF;">Vector2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(), </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">tween.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">tween_callback</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#B31D28;--shiki-dark:#FFFFFF;font-style:italic;--shiki-dark-font-style:inherit;">$</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">Sprite.queue_free)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>bind_node(self)表示将tween的绑定到self中。</li></ul><h3 id="避免使用多个tween操作一个属性" tabindex="-1"><a class="header-anchor" href="#避免使用多个tween操作一个属性"><span>避免使用多个tween操作一个属性</span></a></h3><p>应该避免对一个物体的一个属性使用多个tween。同时作用于相同属性的tween，后创建效果的会覆盖先创建的。如果需要打断并重启动画，考虑将tween赋予一个变量:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">var tween</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">func </span><span style="color:#24292E;--shiki-dark:#61AFEF;">animate</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">	if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> tween:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">		tween.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">kill</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Abort the previous animation.</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	tween </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> create_tween</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tween不是为重复使用而设计的，尝试这样做会导致未定义的行为。为每个动画以及每次从头开始重播动画时创建一个新的Tween。记住，Tween会立即启动，因此只有在要开始动画时才创建Tween。</p><h3 id="tween-property" tabindex="-1"><a class="header-anchor" href="#tween-property"><span>tween_property</span></a></h3><ul><li><code>PropertyTweener tween_property (Object object, NodePath property, Variant final_val, float duration)</code></li><li>This method tweens a <mark>property</mark> of an <mark>object</mark> between an initial value and <mark>final_val</mark> in a span of time equal to <mark>duration</mark>, in seconds.</li><li>初始值就是tweener开始执行时object的property的值。</li><li>正确的property名称可以通过将鼠标悬浮在inspector显示的属性上得到</li><li>支持<code>property:component</code>语法。例如单独修改position.x，则可以用<code>position:x</code></li></ul><p>PropertyTweener</p><ul><li>from(value) 手动设置tweener的初始值为value</li><li>from_current() 手动设置tweener的初始值为创建tweener时的值，而非默认的tweener开始执行时的值。</li><li>as_relative() 将tween_property的终值的意义改为相对位移。</li><li>set_delay (float delay)</li><li>set_ease (EaseType ease)</li><li>set_trans (TransitionType trans)</li></ul><p>例子：将物体从a到b移动两次，使用不同的过渡方法。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">var tween </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> create_tween</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">tween.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">tween_property</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#B31D28;--shiki-dark:#FFFFFF;font-style:italic;--shiki-dark-font-style:inherit;">$</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">Sprite, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;position&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, Vector2.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">RIGHT</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 300</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#24292E;--shiki-dark:#61AFEF;">as_relative</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#61AFEF;">set_trans</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(Tween.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">TRANS_SINE</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">tween.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">tween_property</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#B31D28;--shiki-dark:#FFFFFF;font-style:italic;--shiki-dark-font-style:inherit;">$</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">Sprite, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;position&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, Vector2.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">RIGHT</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 300</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#24292E;--shiki-dark:#61AFEF;">as_relative</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#61AFEF;">from_current</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#61AFEF;">set_trans</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(Tween.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">TRANS_EXPO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tween-interval" tabindex="-1"><a class="header-anchor" href="#tween-interval"><span>tween_interval</span></a></h3><ul><li><code>IntervalTweener tween_interval(float time)</code></li><li>创建一个time秒内什么都不干的tweener。</li><li>功能类似set_delay</li><li>也可以当一个计时器使用 <ul><li><code>await create_tween().tween_interval(2).finished</code></li></ul></li></ul><h3 id="tween-callback" tabindex="-1"><a class="header-anchor" href="#tween-callback"><span>tween_callback</span></a></h3><ul><li><code>CallbackTweener tween_callback(Callable callback)</code></li><li>调用任意方法</li><li>通常是在动画结束时做一些收尾工作</li></ul><p>例子:每秒调用一次</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">var tween </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#61AFEF;"> get_tree</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#61AFEF;">create_tween</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#24292E;--shiki-dark:#61AFEF;">set_loops</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">tween.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">tween_callback</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(shoot).</span><span style="color:#24292E;--shiki-dark:#61AFEF;">set_delay</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tween-method" tabindex="-1"><a class="header-anchor" href="#tween-method"><span>tween_method</span></a></h3><ul><li><code>MethodTweener tween_method (Callable method, Variant from, Variant to, float duration)</code></li><li>It calls a method over time with a tweened value provided as an argument. The value is tweened between from and to over the time specified by duration, in seconds.</li><li>用插值得到的值为参数调用method。值<code>v=from+(to-from)*(t/duration)</code></li></ul><p>MethodTweener</p><ul><li>set_delay (float delay)</li><li>set_ease (EaseType ease)</li><li>set_trans (TransitionType trans)</li></ul><h2 id="canvaslayer" tabindex="-1"><a class="header-anchor" href="#canvaslayer"><span>CanvasLayer</span></a></h2><ul><li>添加一个独立的2D渲染层</li><li>可以设置layer数值。数值低的先渲染</li><li>CanvasLayer的transform是独立的，不依赖父节点的transform。</li><li>每个CanvasItem节点都在一个canvas layer中，每个canvas layer都有一个transform，可以通过Transform2D(2x3的矩阵，代表旋转缩放平移的仿射矩阵)获取。</li></ul>`,25);function h(B,y){const e=l("ExternalLinkIcon");return r(),o("div",null,[d,s("p",null,[a("插值方法效果参考："),s("a",k,[a("easings.net"),p(e)])]),c])}const u=i(t,[["render",h],["__file","Godot组件与基本使用方法.html.vue"]]),A=JSON.parse('{"path":"/gamedev/Godot%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html","title":"Godot组件与基本使用方法","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2023-10-11T00:00:00.000Z","sticky":false,"star":false,"comment":true,"category":["GameDev"],"tag":["godot"],"description":"Godot组件与基本使用方法","head":[["meta",{"property":"og:url","content":"https://1e0nhardt.github.io/gamedev/Godot%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"宁静致远"}],["meta",{"property":"og:title","content":"Godot组件与基本使用方法"}],["meta",{"property":"og:description","content":"Godot组件与基本使用方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-13T14:07:48.000Z"}],["meta",{"property":"article:author","content":"leonhardt"}],["meta",{"property":"article:tag","content":"godot"}],["meta",{"property":"article:published_time","content":"2023-10-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-13T14:07:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Godot组件与基本使用方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-13T14:07:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"leonhardt\\",\\"url\\":\\"/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"MenuButton","slug":"menubutton","link":"#menubutton","children":[]},{"level":2,"title":"GraphEdit","slug":"graphedit","link":"#graphedit","children":[]},{"level":2,"title":"在2D中自定义_draw()","slug":"在2d中自定义-draw","link":"#在2d中自定义-draw","children":[{"level":3,"title":"绘制","slug":"绘制","link":"#绘制","children":[]},{"level":3,"title":"更新","slug":"更新","link":"#更新","children":[]},{"level":3,"title":"坐标空间","slug":"坐标空间","link":"#坐标空间","children":[]}]},{"level":2,"title":"无边框，窗口透明，点击穿透","slug":"无边框-窗口透明-点击穿透","link":"#无边框-窗口透明-点击穿透","children":[{"level":3,"title":"无边框","slug":"无边框","link":"#无边框","children":[]},{"level":3,"title":"窗口透明","slug":"窗口透明","link":"#窗口透明","children":[]},{"level":3,"title":"点击穿透","slug":"点击穿透","link":"#点击穿透","children":[]},{"level":3,"title":"子窗口的无边框和透明","slug":"子窗口的无边框和透明","link":"#子窗口的无边框和透明","children":[]}]},{"level":2,"title":"多窗口","slug":"多窗口","link":"#多窗口","children":[]},{"level":2,"title":"Tween","slug":"tween","link":"#tween","children":[{"level":3,"title":"避免使用多个tween操作一个属性","slug":"避免使用多个tween操作一个属性","link":"#避免使用多个tween操作一个属性","children":[]},{"level":3,"title":"tween_property","slug":"tween-property","link":"#tween-property","children":[]},{"level":3,"title":"tween_interval","slug":"tween-interval","link":"#tween-interval","children":[]},{"level":3,"title":"tween_callback","slug":"tween-callback","link":"#tween-callback","children":[]},{"level":3,"title":"tween_method","slug":"tween-method","link":"#tween-method","children":[]}]},{"level":2,"title":"CanvasLayer","slug":"canvaslayer","link":"#canvaslayer","children":[]}],"git":{"createdTime":1713017268000,"updatedTime":1713017268000,"contributors":[{"name":"1e0nhardt","email":"huwkigane@gmail.com","commits":1}]},"readingTime":{"minutes":4.43,"words":1330},"filePathRelative":"gamedev/Godot组件与基本使用方法.md","localizedDate":"2023年10月11日","excerpt":""}');export{u as comp,A as data};
